{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","id","href","email","className","name","TodoInfo","todo","title","completed","cn","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","getTodoId","Math","max","todosWithUsers","App","useState","setUserId","setTitle","setTodos","hasUserIdError","setUserIdError","hasTitleError","setTitleError","action","method","onSubmit","event","preventDefault","newTodo","currentTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,mBAAG,UAASA,EAAKC,GAAIC,KAAI,iBAAYF,EAAKG,OAASC,UAAU,WAA7D,SACGJ,EAAKK,QCAGC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCN,EAIEM,EAJFN,GACAO,EAGED,EAHFC,MACAR,EAEEO,EAFFP,KACAS,EACEF,EADFE,UAGF,OACE,0BACE,UAASR,EACTG,UAAWM,IACT,WACA,CAAE,sBAAuBD,IAJ7B,UAOE,oBAAIL,UAAU,kBAAd,SACGI,IAGFR,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCrBlBW,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKN,UCVX,GACb,CACEA,GAAI,EACJI,KAAM,gBACNS,SAAU,OACVX,MAAO,qBAET,CACEF,GAAI,EACJI,KAAM,eACNS,SAAU,YACVX,MAAO,qBAET,CACEF,GAAI,EACJI,KAAM,mBACNS,SAAU,WACVX,MAAO,sBAET,CACEF,GAAI,EACJI,KAAM,mBACNS,SAAU,WACVX,MAAO,6BAET,CACEF,GAAI,EACJI,KAAM,mBACNS,SAAU,SACVX,MAAO,4BAET,CACEF,GAAI,EACJI,KAAM,uBACNS,SAAU,mBACVX,MAAO,2BAET,CACEF,GAAI,EACJI,KAAM,kBACNS,SAAU,eACVX,MAAO,0BAET,CACEF,GAAI,EACJI,KAAM,2BACNS,SAAU,gBACVX,MAAO,wBAET,CACEF,GAAI,EACJI,KAAM,kBACNS,SAAU,WACVX,MAAO,2BAET,CACEF,GAAI,GACJI,KAAM,qBACNS,SAAU,iBACVX,MAAO,2BCnDLY,EAAc,SAACC,GACnB,OAAOC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKC,KAAOe,MAAW,MAGvDG,EAAY,SAACP,GAGjB,OAFkBQ,KAAKC,IAAL,MAAAD,KAAI,YAAQR,EAAMC,KAAI,SAAAN,GAAI,OAAIA,EAAKN,QAElC,GAGfqB,EClBS,CACb,CACErB,GAAI,EACJO,MAAO,qBACPC,WAAW,EACXO,OAAQ,GAEV,CACEf,GAAI,GACJO,MAAO,kBACPC,WAAW,EACXO,OAAQ,GAEV,CACEf,GAAI,EACJO,MAAO,qCACPC,WAAW,EACXO,OAAQ,IDC2CH,KAAI,SAAAN,GAAI,kCAExDA,GAFwD,IAG3DP,KAAMe,EAAYR,EAAKS,aAIdO,EAAM,WACjB,MAA4BC,mBAAS,GAArC,mBAAOR,EAAP,KAAeS,EAAf,KACA,EAA0BD,mBAAS,IAAnC,mBAAOhB,EAAP,KAAckB,EAAd,KACA,EAA0BF,mBAAyBF,GAAnD,mBAAOV,EAAP,KAAce,EAAd,KACA,EAAyCH,oBAAS,GAAlD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAAuCL,oBAAS,GAAhD,mBAAOM,EAAP,KAAsBC,EAAtB,KAwCA,OACE,sBAAK3B,UAAU,MAAf,UACE,+CAEA,uBACE4B,OAAO,aACPC,OAAO,OACPC,SAxCmB,SAACC,GAMxB,GALAA,EAAMC,iBAENP,GAAgBb,GAChBe,GAAevB,GAEVA,GAAUQ,EAAf,CAIA,IAAMqB,EAAwB,CAC5BpC,GAAIkB,EAAUP,GACdJ,QACAC,WAAW,EACXO,SACAhB,KAAMe,EAAYC,IAGpBW,GAAS,SAAAW,GAAY,4BAAQA,GAAR,CAAsBD,OAtB3CX,EAAS,IACTD,EAAU,KAwCR,UAKE,sBAAKrB,UAAU,QAAf,UACE,uBAAOmC,QAAQ,aAAf,qBAEA,uBACEtC,GAAG,aACHuC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOlC,EACPmC,SAvBU,SAACR,GACnBJ,GAAc,GACdL,EAASS,EAAMS,OAAOF,UAuBfZ,GACC,sBAAM1B,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,uBAAOmC,QAAQ,aAAf,oBAEA,yBACEtC,GAAG,aACH,UAAQ,aACRyC,MAAO1B,EACP2B,SA1CW,SAACR,GACpBN,GAAe,GACfJ,GAAWU,EAAMS,OAAOF,QAoClB,UAME,wBAAQA,MAAM,IAAIG,UAAQ,EAA1B,2BACC5B,EAAgBJ,KAAI,SAAAb,GAAI,OACvB,wBAAsB0C,MAAO1C,EAAKC,GAAlC,SACGD,EAAKK,MADKL,EAAKC,UAMrB2B,GACC,sBAAMxB,UAAU,QAAhB,qCAIJ,wBACEoC,KAAK,SACL,UAAQ,eAFV,oBAQF,cAAC,EAAD,CAAU5B,MAAOA,QE1HvBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b9e2d56b.chunk.js","sourcesContent":["import { User } from '../../react-app-env';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a data-id={user.id} href={`mailto:${user.email}`} className=\"UserInfo\">\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../react-app-env';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../../react-app-env';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoWithUser } from './react-app-env';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUserById = (userId: number) => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n\nconst getTodoId = (todos: TodoWithUser[]) => {\n  const maxTodoId = Math.max(...todos.map(todo => todo.id));\n\n  return maxTodoId + 1;\n};\n\nconst todosWithUsers: TodoWithUser[] = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }\n));\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState<TodoWithUser[]>(todosWithUsers);\n  const [hasUserIdError, setUserIdError] = useState(false);\n  const [hasTitleError, setTitleError] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setUserIdError(!userId);\n    setTitleError(!title);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newTodo: TodoWithUser = {\n      id: getTodoId(todos),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n\n    resetForm();\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserIdError(false);\n    setUserId(+event.target.value);\n  };\n\n  const handleInput = (event : React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    setTitle(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}